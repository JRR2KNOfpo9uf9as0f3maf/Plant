for i, bot in pairs(getBots()) do
    if getBot().name:upper() == bot.name:upper() then
        indexbot = i
    end
end

index = 1
timer = {}
infoid = {}
worlds = {}
local setting = {}
setting.takeseed = 1
setting.timechecker = os.time()

if indexbot then
    startY = 1 + ((indexbot - 1) * 2)
    increment = #getBots() * 2
    getBot().legit_mode = false
    getBot().move_range = moveRange
    getBot().move_interval = moveInterval
    for i =  1,worldperbot do
        table.insert(worlds,farmList[math.floor((indexbot - 1) * worldperbot + i)])
    end
end

setting.randomletter = function()
    local letter = ""
    local function stringRandom()
        local random = math.random(1,3)
        if random == 1 then
            return string.char(math.random(97,122))
        elseif random == 2 then
            return string.char(math.random(65,90))
        else
            return string.char(math.random(48,57))
        end
    end
    for i = 1, lettername do
        letter = letter..stringRandom()
    end
    return letter
end

setting.botinfo = function(content)
	if webhookstatus then
		text = [[
			$webHookUrl = "]]..webhookstatuslink..[["
			$payload = @{
				content = "]]..content..[["
			}

			[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
			Invoke-RestMethod -Uri $webHookUrl -Body ($payload | ConvertTo-Json -Depth 4) -Method Post -ContentType "application/json"
		]]
		local file = io.popen("powershell -command -", "w")
		file:write(text)
		file:close()
	end
end

findPath = function(x,y)
    getBot():findPath(x,y)
end

sendPacket = function(str,int)
    return getBot():sendPacket(int,str)
end

findItem = function(id)
    return getBot():getInventory():getItemCount(id)
end

place = function(id,ex,ye)
    getBot():place(getBot().x+ex,getBot().y+ye,id)
end

collect = function(int)
    getBot():collect(int)
end

setting.getEnetBot = function()
    strings = ""
    for i, list in pairs(getBots()) do
        if list.status == BotStatus.online then
            Status = "ONLINE"
        elseif list.status == BotStatus.account_banned  then
            Status = "SUSPENDED"
        elseif list.status == BotStatus.error_connecting  then
            Status = "ERCON"
        else
            Status = "DISCONNECT"
        end
        strings = strings.."\n"..Status.."" 
    end
    return strings
end

setting.botstatus = function()
    strings = ""
    for _, bot in pairs(getBots()) do
        strings = strings.."\n["..bot.level.."]||"..string.upper(bot.name).."||" 
    end
    return strings
end

setting.botworld = function()
    strings = ""
    for _, bots in pairs(getBots()) do
        strings = strings.."\n||"..string.upper(bots:getWorld().name).."||" 
    end
    return strings
end

setting.storagename = function()
    str = ""
	for i = 1, #storage do
        str = str.."\n||"..string.upper(storage[i]).."|| : "..(infoid[storage[i]] or "?")..""
    end
    return str
end

setting.webhookinfo = function()
	if botinfo then
        realtime = os.time() - setting.timechecker
        local text = [[
            $webHookUrl = "]]..linkbotinfo..[[/messages/]]..messageidbotinfo..[["
            $payload = @{
                username = "Caramoy's"
                embeds = @(
                    @{
                        title = "Caramoy Syndicate : https://discord.com/invite/fTTKW8vvuq"
                        color = "]]..math.random(111111,999999)..[["
                        fields = @(
                            @{
                                name = ""
                                value = "]].."RUNTIME : "..math.floor(realtime/86400).." Days "..math.floor(realtime%86400/3600).." Hours "..math.floor(realtime%86400%3600/60).." Minutes"..[["
                                inline = "false"
                            }
                            @{
                                name = "BOTS & STORAGE STATICS :"
                                value = "]]..""..[["
                                inline = "false"
                            }
                            @{
                                name = "BOTNAME"
                                value = "]]..setting.botstatus()..[["
                                inline = "true"
                            }
                            @{
                                name = "WORLD"
                                value = "]]..setting.botworld()..[["
                                inline = "true"
                            }
                            @{
                                name = "STATUS"
                                value = "]]..setting.getEnetBot()..[["
                                inline = "true"
                            }
                            @{
                                name = "STORAGE SEED"
                                value = "]]..setting.storagename()..[["
                                inline = "true"
                            }
                        )
                        footer = @{
                            text = "[Lucifer] : Plant Script`nLast update : ]]..(os.date("!%a %b %d, %Y at %I:%M %p", os.time() + 7 * 60 * 60))..[["
                        }
                    }
                )
            }
            
            [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
            Invoke-RestMethod -Uri $webHookUrl -Body ($payload | ConvertTo-Json -Depth 4) -Method Patch -ContentType 'application/json'
        ]]
        local pipe = io.popen("powershell -command -", "w")
        pipe:write(text)
        pipe:close()
    end
end

setting.reconnect = function(world,id,x,y)
    if getBot():getPing() == 0 then
        getBot():disconnect()
        sleep(4000)
    end
    if not getBot():isInWorld(world:upper()) and getBot().status == BotStatus.online then 
        setting.botinfo("("..getBot().name..") at another world, trying to joining world again @everyone")
        local count = 0
        while not getBot():isInWorld(world:upper()) do
            sendPacket("action|join_request\nname|"..world:upper().."\ninvitedWorld|0",3)
            sleep(delaywarp)
            if not getBot():isInWorld(world:upper()) then 
                count = count + 1
                if count > 5 then
                    setting.botinfo("("..getBot().name..") Failed to joining world again, terminated script @everyone")
                    getBot():stopScript()
                end
            end
        end
        if id ~= "" then
            local stucks = 0
            while getTile(getBot().x,getBot().y).fg == 6 do
                sendPacket("action|join_request\nname|" ..world:upper().."|"..id:upper().."\ninvitedWorld|0",3)
                sleep(delaywarp)
                if stucks > 3 then
                    setting.botinfo("("..getBot().name..") Failed to reconnecting bot, stuck at white door. Terminated script @everyone")
                    getBot():stopScript()
                end
            end
        end
        if x and y then
            while getBot().x ~= x or getBot().y ~= y do
                findPath(x,y)
                sleep(150)
            end
        end
        setting.botinfo("("..getBot().name..") success to joining world @everyone")
    end
    if getBot().status ~= BotStatus.online then
        setting.botinfo("("..getBot().name..") status is offline @everyone")
        while getBot().status ~= BotStatus.online do
            getBot():connect()
            sleep(delayreconnect)
            if getBot().status == BotStatus.account_banned then
                setting.botinfo("("..getBot().name..") status is suspended, removing bot @everyone")
                getBot():stopScript()
            end
        end
        local counts = 0
        while not getBot():isInWorld(world:upper()) do
            sendPacket("action|join_request\nname|"..world:upper().."\ninvitedWorld|0",3)
            sleep(delaywarp)
            if not getBot():isInWorld(world:upper()) then 
                counts = counts + 1
                if counts > 5 then
                    setting.botinfo("("..getBot().name..") Failed to joining world again, terminated script @everyone")
                    getBot():stopScript()
                end
            end
        end
        if id ~= "" then
            local stuckk = 0
            while getTile(getBot().x,getBot().y).fg == 6 do
                sendPacket("action|join_request\nname|" ..world:upper().."|"..id:upper().."\ninvitedWorld|0",3)
                sleep(delaywarp)
                if stuckk > 3 then
                    setting.botinfo("("..getBot().name..") Failed to reconnecting bot, stuck at white door. Terminated script @everyone")
                    getBot():stopScript()
                end
            end
        end
        if x and y then
            while getBot().x ~= x or getBot().y ~= y do
                findPath(x,y)
                sleep(150)
            end
        end
        setting.botinfo("("..getBot().name..") status is online @everyone")
    end
    if getTile(getBot().x,getBot().y).fg == 6 then
        setting.botinfo("("..getBot().name..") Stuck at white door ! @everyone")
        local stuck = 0
        if id ~= "" then
            while getTile(getBot().x,getBot().y).fg == 6 do
                sendPacket("action|join_request\nname|" ..world:upper().."|"..id:upper().."\ninvitedWorld|0",3)
                sleep(delaywarp)
                if stuck > 3 then
                    setting.botinfo("("..getBot().name..") Failed to reconnecting bot, stuck at white door. Terminated script @everyone")
                end
            end
        end
        if x and y then
            while getBot().x ~= x or getBot().y ~= y do
                findPath(x,y)
                sleep(150)
            end
        end
        setting.botinfo("("..getBot().name..") Already back to pos ! @everyone")
    end
end

setting.warp = function(world,door,cooldown)
    name = world
    if door ~= "" then
        name = name .. "|" ..door
    end
    if not getBot():isInWorld(world:upper()) then
        addEvent(Event.variantlist, function(variant, netid)
            if variant:get(0):getString() == "OnConsoleMessage" then
                if variant:get(1):getString():lower():find("inaccessible.") then
                    nuked = true
                end
            end
        end)
        while not getBot():isInWorld(world:upper()) and not nuked do
            if getBot():getPing() == 0 then
                getBot():disconnect()
                sleep(2000)
            end
            while getBot().status ~= BotStatus.online do
                getBot():connect()
                sleep(delayreconnect)
                if getBot().status == BotStatus.account_banned then
                    setting.botinfo("("..getBot().name..") status is suspended, removing bot @everyone")
                    getBot():stopScript()
                end
            end
            sendPacket("action|join_request\nname|"..name.."\ninvitedWorld|0",3)
            listenEvents(8)
            sleep(cooldown)
        end
        removeEvents()
        sleep(2000)
    end
    if getBot():isInWorld(world:upper()) then
        if door ~= "" then
            local stuck = 0
            while getTile(getBot().x,getBot().y).fg == 6 and not wrong do
                if getBot():getPing() == 0 then
                    getBot():disconnect()
                    sleep(4000)
                end
                while getBot().status ~= BotStatus.online do
                    getBot():connect()
                    sleep(delayreconnect)
                    if getBot().status == BotStatus.account_banned then
                        setting.botinfo("("..getBot().name..") status is suspended, removing bot @everyone")
                        getBot():stopScript()
                    end
                end
                sendPacket("action|join_request\nname|"..name.."\ninvitedWorld|0",3)
                sleep(cooldown)
                stuck = stuck + 1
                if stuck == 5 then
                    wrong = true
                end
            end
        end
    end
end

setting.itemFloat = function(id)
    return getBot():getWorld().growscan:getObjects()[id] or 0
end

setting.take = function(threads)
    for i = setting.takeseed , #storage do
        print("["..indexbot.."]Take seed")
        world = storage[i]
        setting.warp(world,doorstorage,delaywarp)
        setting.webhookinfo()
        if not nuked then
            if not wrong then
                if not splice then
                    if setting.itemFloat(seed) == 0 and not looping then
                        infoid[world] = ""..setting.itemFloat(seed).."x (EMPTY)"
                        setting.botinfo("Seeds storage : ("..world..") has empty, skipped world @everyone")
                        print("["..indexbot.."]Seeds storage : ("..world..") has empty, skipped world")
                        setting.takeseed = setting.takeseed + 1
                        if setting.takeseed > #storage then
                            infoid[world] = ""..setting.itemFloat(seed).."x (EMPTY)"
                            setting.botinfo("All seeds storage has empty, terminated script @everyone")
                            print("["..indexbot.."]All seeds storage has empty, terminated script ")
                            setting.webhookinfo()
                            if removingbot then
                                removeBot()
                                sleep(2000)
                            end
                            getBot():stopScript()
                        end
                    else
                        for _, object in pairs(getBot():getWorld():getObjects()) do
                            if object.id == seed then
                                findPath(math.floor((object.x)/32), math.floor((object.y)/32))
                                sleep(1000)
                                collect(2)
                                sleep(1000)
                                setting.reconnect(world,doorstorage,math.floor((object.x)/32), math.floor((object.y)/32))
                            end
                            if findItem(seed) > 0 then
                                break
                            end
                        end
                        sleep(100)
                        break
                    end
                else
                    if setting.itemFloat(seed) == 0 or setting.itemFloat(seedsplice) == 0 and not looping then
                        infoid[world] = ""..setting.itemFloat(seed).."x / "..setting.itemFloat(seedsplice).."x (EMPTY)"
                        setting.botinfo("Seeds storage : ("..world..") has empty, skipped world @everyone")
                        print("["..indexbot.."]Seeds storage : ("..world..") has empty, skipped world")
                        setting.takeseed = setting.takeseed + 1
                        if setting.takeseed > #storage then
                            infoid[world] = ""..setting.itemFloat(seed).."x / "..setting.itemFloat(seedsplice).."x (EMPTY)"
                            setting.botinfo("All seeds storage has empty, terminated script @everyone")
                            print("["..indexbot.."]All seeds storage has empty, terminated script ")
                            setting.webhookinfo()
                            if removingbot then
                                removeBot()
                                sleep(2000)
                            end
                            getBot():stopScript()
                        end
                    else
                        for _, object in pairs(getBot():getWorld():getObjects()) do
                            if object.id == seed then
                                findPath(math.floor((object.x)/32), math.floor((object.y)/32))
                                sleep(1000)
                                collect(2)
                                sleep(1000)
                                setting.reconnect(world,doorstorage,math.floor((object.x)/32), math.floor((object.y)/32))
                            end
                            if findItem(seed) > 0 then
                                break
                            end
                        end
                        sleep(1000)
                        for _, object in pairs(getBot():getWorld():getObjects()) do
                            if object.id == seedsplice then
                                findPath(math.floor((object.x)/32), math.floor((object.y)/32))
                                sleep(1000)
                                collect(2)
                                sleep(1000)
                                setting.reconnect(world,doorstorage,math.floor((object.x)/32), math.floor((object.y)/32))
                            end
                            if findItem(seedsplice) > 0 then
                                break
                            end
                        end
                        sleep(100)
                        break
                    end
                end
            else
                infoid[world] = "WRONG DOOR ID"
                wrong = false
                sleep(5000)
                setting.botinfo("Seeds storage : ("..world..") is wrong door id, skipped world @everyone")
                print("["..indexbot.."]Seeds storage : ("..world..") is wrong door id, skipped world")
                setting.takeseed = setting.takeseed + 1
                if setting.takeseed > #storage then
                    setting.botinfo("All seeds storage has empty, terminated script  @everyone")
                    print("["..indexbot.."]All seeds storage has empty, terminated script")
                    if removingbot then
                        removeBot()
                        sleep(2000)
                    end
                    getBot():stopScript()
                end
            end
        else
            infoid[world] = "NUKED"
            nuked = false
            sleep(5000)
            setting.botinfo("Seeds storage : ("..world..") is NUKED, skipped world @everyone")
            print("["..indexbot.."]Seeds storage : ("..world..") is NUKED, skipped world")
            setting.takeseed = setting.takeseed + 1
            if setting.takeseed > #storage then
                setting.botinfo("All seeds storage has empty, terminated script @everyone")
                print("["..indexbot.."]All seeds storage has empty, terminated script")
                if removingbot then
                    removeBot()
                    sleep(2000)
                end
                getBot():stopScript()
            end
        end
    end
    if not splice then
        infoid[world] = ""..setting.itemFloat(seed).."x"
    else
        infoid[world] = ""..setting.itemFloat(seed).."x / "..setting.itemFloat(seedsplice).."x"
    end
end

setting.recheck = function(threads)
    print("["..indexbot.."]Recheck")
    for i = 1, 2 do
        if not multiplebot then
            for y = -1, 53 do
                for x = 0 , 99 , 1 do
                    if getTile(x,y).fg == 0 and getTile(x,y).flags ~= 0 then
                        if splice then
                            if findItem(seed) == 0 or findItem(seedsplice) == 0 then
                                if looping then
                                    while findItem(seed) == 0 or findItem(seedsplice) == 0 do
                                        setting.take(threads)
                                        sleep(delaylooping)
                                    end
                                else
                                    setting.take(threads)
                                end
                                print("["..indexbot.."]Planting")
                                setting.warp(threads,doorfarmList,delaywarp)
                                setting.webhookinfo()
                            end
                        else
                            if findItem(seed) == 0 then
                                if looping then
                                    while findItem(seed) == 0 do
                                        setting.take(threads)
                                        sleep(delaylooping)
                                    end
                                else
                                    setting.take(threads)
                                end
                                print("["..indexbot.."]Planting")
                                setting.warp(threads,doorfarmList,delaywarp)
                                setting.webhookinfo()
                            end
                        end
                        findPath(x,y)
                        sleep(30)
                        setting.reconnect(threads,doorfarmList,x,y)
                        if splice then
                            while getTile(x,y).fg ~= seed do
                                place(seed,0,0)
                                sleep(delayplant)
                                setting.reconnect(threads,doorfarmList,x,y)
                            end
                            while getTile(x,y).fg == seed do
                                place(seedsplice,0,0)
                                sleep(delayplant)
                                setting.reconnect(threads,doorfarmList,x,y)
                            end
                        else
                            if getTile(x,y).fg ~= seed then
                                place(seed,0,0)
                                sleep(delayplant)
                                setting.reconnect(threads,doorfarmList,x,y)
                            end
                        end
                    end
                end
            end
        else
            for y = startY, 53, increment do
                for x = 0, 99, 1 do
                    if getTile(x, y).fg == 0 and getTile(x, y).flags ~= 0 then
                        if splice then
                            if findItem(seed) == 0 or findItem(seedsplice) == 0 then
                                if looping then
                                    while findItem(seed) == 0 or findItem(seedsplice) == 0 do
                                        setting.take(threads)
                                        sleep(delaylooping)
                                    end
                                else
                                    setting.take(threads)
                                end
                                print("["..indexbot.."]Recheck")
                                setting.warp(threads,doorfarmList,delaywarp)
                                setting.webhookinfo()
                            end
                        else
                            if findItem(seed) == 0 then
                                if looping then
                                    while findItem(seed) == 0 do
                                        setting.take(threads)
                                        sleep(delaylooping)
                                    end
                                else
                                    setting.take(threads)
                                end
                                print("["..indexbot.."]Recheck")
                                setting.warp(threads,doorfarmList,delaywarp)
                                setting.webhookinfo()
                            end
                        end
                        findPath(x,y)
                        sleep(30)
                        setting.reconnect(threads,doorfarmList,x,y)
                        if splice then
                            while getTile(x,y).fg ~= seed do
                                place(seed,0,0)
                                sleep(delayplant)
                                setting.reconnect(threads,doorfarmList,x,y)
                            end
                            while getTile(x,y).fg == seed do
                                place(seedsplice,0,0)
                                sleep(delayplant)
                                setting.reconnect(threads,doorfarmList,x,y)
                            end
                        else
                            if getTile(x,y).fg ~= seed then
                                place(seed,0,0)
                                sleep(delayplant)
                                setting.reconnect(threads,doorfarmList,x,y)
                            end
                        end
                    end
                end
            end
        end
    end
end

setting.plant = function(threads)
    if not multiplebot then
        for y = -1, 53 do
            for x = 0 , 99 , 1 do
                if getTile(x,y).fg == 0 and getTile(x,y).flags ~= 0 then
                    if splice then
                        if findItem(seed) == 0 or findItem(seedsplice) == 0 then
                            if looping then
                                while findItem(seed) == 0 or findItem(seedsplice) == 0 do
                                    setting.take(threads)
                                    sleep(delaylooping)
                                end
                            else
                                setting.take(threads)
                            end
                            print("["..indexbot.."]Planting")
                            setting.warp(threads,doorfarmList,delaywarp)
                            setting.webhookinfo()
                        end
                    else
                        if findItem(seed) == 0 then
                            if looping then
                                while findItem(seed) == 0 do
                                    setting.take(threads)
                                    sleep(delaylooping)
                                end
                            else
                                setting.take(threads)
                            end
                            print("["..indexbot.."]Planting")
                            setting.warp(threads,doorfarmList,delaywarp)
                            setting.webhookinfo()
                        end
                    end
                    findPath(x,y)
                    sleep(30)
                    setting.reconnect(threads,doorfarmList,x,y)
                    if splice then
                        while getTile(x,y).fg ~= seed do
                            place(seed,0,0)
                            sleep(delayplant)
                            setting.reconnect(threads,doorfarmList,x,y)
                        end
                        while getTile(x,y).fg == seed do
                            place(seedsplice,0,0)
                            sleep(delayplant)
                            setting.reconnect(threads,doorfarmList,x,y)
                        end
                    else
                        if getTile(x,y).fg ~= seed then
                            place(seed,0,0)
                            sleep(delayplant)
                            setting.reconnect(threads,doorfarmList,x,y)
                        end
                    end
                end
            end
        end
    else
        for y = startY, 53, increment do
            for x = 0, 99, 1 do
                if getTile(x, y).fg == 0 and getTile(x, y).flags ~= 0 then
                    if splice then
                        if findItem(seed) == 0 or findItem(seedsplice) == 0 then
                            if looping then
                                while findItem(seed) == 0 or findItem(seedsplice) == 0 do
                                    setting.take(threads)
                                    sleep(delaylooping)
                                end
                            else
                                setting.take(threads)
                            end
                            print("["..indexbot.."]Planting")
                            setting.warp(threads,doorfarmList,delaywarp)
                            setting.webhookinfo()
                        end
                    else
                        if findItem(seed) == 0 then
                            if looping then
                                while findItem(seed) == 0 do
                                    setting.take(threads)
                                    sleep(delaylooping)
                                end
                            else
                                setting.take(threads)
                            end
                            print("["..indexbot.."]Planting")
                            setting.warp(threads,doorfarmList,delaywarp)
                            setting.webhookinfo()
                        end
                    end
                    findPath(x,y)
                    sleep(30)
                    setting.reconnect(threads,doorfarmList,x,y)
                    if splice then
                        while getTile(x,y).fg ~= seed do
                            place(seed,0,0)
                            sleep(delayplant)
                            setting.reconnect(threads,doorfarmList,x,y)
                        end
                        while getTile(x,y).fg == seed do
                            place(seedsplice,0,0)
                            sleep(delayplant)
                            setting.reconnect(threads,doorfarmList,x,y)
                        end
                    else
                        if getTile(x,y).fg ~= seed then
                            place(seed,0,0)
                            sleep(delayplant)
                            setting.reconnect(threads,doorfarmList,x,y)
                        end
                    end
                end
            end
        end
    end
end

setting.writeFile = function(threads)
    local file = io.open("WorldStatus.txt","a")
    file:write(threads.."\n")
    file:close()
end

setting.main = function()
    if typeaccount == "guest" then
        for i,bot in pairs(botList) do
            local derr = {}
            for id in bot:gmatch("([^|]+)") do 
                table.insert(derr, id) 
            end
            x = derr[1]
            y = derr[2]
            addBot(""..setting.randomletter().."",x,y)
            sleep(delayloginbot)
        end
    elseif typeaccount == "normal" then
        for i,list in pairs(botList) do
            local derr = {}
            for id in list:gmatch("([^|]+)") do 
                table.insert(derr, id) 
            end
            x = derr[1]
            y = derr[2]
            addBot(x,y)
            sleep(delayloginbot)
        end
    end
    print("Please select all and re-execute script")
end

setting.setauth = function()
    if not indexbot and proxyServerDatabase then
        getProxyManager().custom_http_proxy = true
        getProxyManager().http_cooldown = delayDataBase
        if useDatabaseForMainProxy then
            getProxyManager().use_main_ip = true -- Use Main IP in Data Proxy Tab.
        end
        if setDatabaseType == "http" then
            addDataProxy(proxyDatabase, Proxy.http) 
        elseif setDatabaseType == "https" then
            addDataProxy(proxyDatabase, Proxy.https)
        elseif setDatabaseType == "socks" then
            addDataProxy(proxyDatabase, Proxy.socks5)
        end
    end
    if not indexbot and withproxy then
        getProxyManager():setLimit(botperproxy)
        for _, lists in pairs(proxyList) do
            getProxyManager():addProxy(lists)
        end
    end
end

if Information == "Script Plant made by Caramoy's Syndicate, Link Discord : https://discord.com/invite/fTTKW8vvuq" and scriptVersion == "0.1" then
    setting.setauth()
    if autologin and not indexbot then
        setting.main()
    end
    getBot().auto_reconnect = false
    while getBot().status ~= BotStatus.online do
        getBot():connect()
        sleep(delayreconnect)
    end
    sleep(indexbot * delayexecute)
    if not multiplebot then
        for idx , value in ipairs(worlds) do
            print("["..indexbot.."]Planting")
            setting.warp(value,doorfarmList,delaywarp)
            setting.webhookinfo()
            ::BACK::
            if not nuked then
                if not wrong then
                    setting.plant(value)
                    setting.recheck(value)
                else
                    setting.writeFile("("..value..") is wrong id")
                    wrong = false
                    print("["..indexbot.."]("..value..") is wrong door id, skipped world")
                    setting.botinfo("("..value..") is wrong door id, skipped world !! @everyone")
                end
            else
                setting.writeFile("("..value..") is NUKED !!")
                nuked = false
                print("["..indexbot.."]"..value.." is NUKED!, check ur world !!")
                setting.botinfo("("..value..") is NUKED!, check ur world !! @everyone")
            end
        end
    else
        for idx, value in pairs(farmList) do
            print("["..indexbot.."]Planting")
            setting.warp(value,doorfarmList,delaywarp)
            setting.webhookinfo()
            if not nuked then
                if not wrong then
                    setting.plant(value)
                    setting.recheck(value)
                else
                    setting.writeFile("("..value..") is wrong id")
                    wrong = false
                    print("["..indexbot.."]("..value..") is wrong door id, skipped world")
                    setting.botinfo("("..value..") is wrong door id, skipped world !! @everyone")
                end
            else
                setting.writeFile("("..value..") is NUKED !!")
                nuked = false
                print("["..indexbot.."]"..value.." is NUKED!, check ur world !!")
                setting.botinfo("("..value..") is NUKED!, check ur world !! @everyone")
            end
        end
    end
    print("["..indexbot.."]finished all world, terminated script!")
    setting.botinfo("finished all world, terminated script! @everyone")
    if removingbot then
        removeBot()
        sleep(2000)
    end
else
    print("["..indexbot.."]Script Plant made by Caramoy's Syndicate, Link Discord : https://discord.com/invite/fTTKW8vvuq")
    setting.botinfo("Script Plant made by Caramoy's Syndicate, Link Discord : https://discord.com/invite/fTTKW8vvuq")
end
