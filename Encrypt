for i, bot in pairs(getBots()) do
    if getBot().name:upper() == bot.name:upper() then
        indexbot = i
    end
end

index = 1
timer = {}
infoid = {}
worlds = {}
strings = ""
local identity = {}
identity.takeseed = 1
identity.goodtime = os.time()

for i =  1,worldperbot do
    table.insert(worlds,farmList[math.floor((indexbot - 1) * worldperbot + i)])
end

identity.splitt = function(str, ptr)
    if not ptr then 
        ptr = "%s"
    end
    local tbl = {}
    for string in string.gmatch(str, ptr) do
        table.insert(tbl, string) 
    end
    return tbl
end

identity.botinfo = function(content)
	if webhookstatus then
		text = [[
			$webHookUrl = "]]..webhookstatuslink..[["
			$payload = @{
				content = "]]..content..[["
			}
			[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
			Invoke-RestMethod -Uri $webHookUrl -Body ($payload | ConvertTo-Json -Depth 4) -Method Post -ContentType "application/json"
		]]
		local file = io.popen("powershell -command -", "w")
		file:write(text)
		file:close()
	end
end

identity.botstatus = function()
    strings = ""
    for _, bot in pairs(getBots()) do
        if short then
            strings = strings.."\n"..""..(string.sub(bot.name,1,3)).." | ||"..(string.sub(bot.world,1,3)).."|| | "..(string.upper(bot.status)).."" 
        else
            strings = strings.."\n"..""..(string.upper(bot.name)).." | ||"..(string.upper(bot.world)).."|| | "..(string.upper(bot.status)).."" 
        end
    end
    return strings
end

identity.storagename = function()
    strings = ""
	for i = 1, #storage do
        if short then
    		strings = strings.."\n||"..(string.sub(storage[i],1,3)).."|| "..(infoid[storage[i]] or "?")..""
        else
    		strings = strings.."\n||"..(string.upper(storage[i])).."|| "..(infoid[storage[i]] or "?")..""
        end
    end
    return strings
end

identity.webhookinfo = function()
	if infostorage then
        local text = [[
            $webHookUrl = "]]..linkinfostorage..[[/messages/]]..messageidinfostorage..[["
            $payload = @{
                username = "BizzantiuM's"
                embeds = @(
                    @{
                        title = "AUTO PLANT v1.2"
                        color = "]]..math.random(111111,999999)..[["
                        fields = @(
                            @{
                                name = ""
                                value = "]].."RUNNING : [ "..identity.goodtimes(os.difftime(os.time(),identity.goodtime)).." ]"..[["
                                inline = "false"
                            }
                            @{
                                name = "BOT INFO"
                                value = "]]..identity.botstatus()..[["
                                inline = "true"
                            }
                            @{
                                name = "STORAGE STATIC"
                                value = "]]..identity.storagename()..[["
                                inline = "true"
                            }
                        )
                        footer = @{
                            text = "[Hydrotrium] Developed by BizzantiuM's`nLast updated : ]]..(os.date"%d/%m/%y":upper().." at ")..os.date("%I")..":"..os.date("%M").." "..os.date("%p"):upper()..[["
                        }
                    }
                )
            }
            [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
            Invoke-RestMethod -Uri $webHookUrl -Body ($payload | ConvertTo-Json -Depth 4) -Method Patch -ContentType 'application/json'
        ]]
        local pipe = io.popen("powershell -command -", "w")
        pipe:write(text)
        pipe:close()
    end
end

identity.reconnect = function(world,id,x,y)
    if getBot().world == "EXIT" and getBot().status == "online" then 
        identity.botinfo("[ ||"..getBot().name.."|| ] at EXIT ??, trying to joining world again @everyone")
        local count = 0
        while getBot().world ~= world:upper() do
            sendPacket("action|join_request\nname|"..world:upper().."\ninvitedWorld|0",3)
            sleep(warp)
            if getBot().world ~= world:upper() then 
                count = count + 1
                if count > 5 then
                    identity.botinfo("[ ||"..getBot().name.."|| ] Failed to joining world again, terminated script @everyone")
                    error()
                end
            end
        end
        if id ~= "" then
            local stucks = 0
            while getTile(math.floor(getBot().x / 32),math.floor(getBot().y / 32)).fg == 6 do
                sendPacket("action|join_request\nname|" ..world:upper().."|"..id:upper().."\ninvitedWorld|0", 3)
                sleep(warp)
                if stucks > 3 then
                    identity.botinfo("[ ||"..getBot().name.."|| ] Failed to reconnecting bot, stuck at white door. Terminated script @everyone")
                    error()
                end
            end
        end
        if x and y then
            while math.floor(getBot().x / 32) ~= x or math.floor(getBot().y / 32) ~= y do
                findPath(x,y)
                sleep(150)
            end
        end
        identity.botinfo("[ ||"..getBot().name.."|| ] success to joining world @everyone")
    end
    if getBot().status ~= "online" then
        identity.botinfo("[ ||"..getBot().name.."|| ] status is "..getBot().status.." @everyone")
        while getBot().status ~= "online" do
            connect()
            sleep(reconnect)
            if getBot().status == "suspended" or getBot().status == "banned" or getBot().status == "maintenance" then
                identity.botinfo("[ ||"..getBot().name.."|| ] status is "..getBot().status..", removing bot @everyone")
                print("[ "..getBot().name.." ] status is "..getBot().status..", removing bot")
                if removingbot then
                    removeBot(getBot().name)
                    sleep(2000)
                end
                error()
            end
        end
        local counts = 0
        while getBot().world ~= world:upper() do
            sendPacket("action|join_request\nname|"..world:upper().."\ninvitedWorld|0",3)
            sleep(warp)
            if getBot().world ~= world:upper() then 
                counts = counts + 1
                if counts > 5 then
                    identity.botinfo("[ ||"..getBot().name.."|| ] Failed to joining world again, terminated script @everyone")
                    error()
                end
            end
        end
        if id ~= "" then
            local stuckk = 0
            while getTile(math.floor(getBot().x / 32),math.floor(getBot().y / 32)).fg == 6 do
                sendPacket("action|join_request\nname|" ..world:upper().."|"..id:upper().."\ninvitedWorld|0", 3)
                sleep(warp)
                if stuckk > 3 then
                    identity.botinfo("[ ||"..getBot().name.."|| ] Failed to reconnecting bot, stuck at white door. Terminated script @everyone")
                    error()
                end
            end
        end
        if x and y then
            while math.floor(getBot().x / 32) ~= x or math.floor(getBot().y / 32) ~= y do
                findPath(x,y)
                sleep(150)
            end
        end
        identity.botinfo("[ ||"..getBot().name.."|| ] status is "..getBot().status.." @everyone")
    end
    if getTile(math.floor(getBot().x / 32),math.floor(getBot().y / 32)).fg == 6 then
        identity.botinfo("[ ||"..getBot().name.."|| ] Stuck at white door ! @everyone")
        local stuck = 0
        if id ~= "" then
            while getTile(math.floor(getBot().x / 32),math.floor(getBot().y / 32)).fg == 6 do
                sendPacket("action|join_request\nname|" ..world:upper().."|"..id:upper().."\ninvitedWorld|0", 3)
                sleep(warp)
                if stuck > 3 then
                    identity.botinfo("[ ||"..getBot().name.."|| ] Failed to reconnecting bot, stuck at white door. Terminated script @everyone")
                end
            end
        end
        if x and y then
            while math.floor(getBot().x / 32) ~= x or math.floor(getBot().y / 32) ~= y do
                findPath(x,y)
                sleep(150)
            end
        end
        identity.botinfo("[ ||"..getBot().name.."|| ] Already back to pos ! @everyone")
    end
end

identity.warp = function(world,door)
    name = world
    if door ~= "" then
        name = name .. "|" ..door
    end
    if getBot().world ~= string.upper(world) then
        addHook("onvariant","nuked",function (varlist)
            if varlist[0] == "OnConsoleMessage" then
                if string.find(varlist[1],"inaccessible.") then
                    nuked = true
                end
                if string.find(varlist[1],"experiencing high load,") then
                    subserver = true
                end
                if string.find(varlist[1],"people in it.") then
                    people = true
                end
                if string.find(varlist[1],"Players lower than level") then
                    level = true
                end
            end
        end)
        local join = 0
        while getBot().world ~= string.upper(world) and not nuked and not subserver and not people and not level do
            while getBot().status ~= "online" do
                connect()
                sleep(reconnect)
                if getBot().status == "suspended" or getBot().status == "banned" or getBot().status == "maintenance" then
                    if removingbot then
                        removeBot(getBot().name)
                        sleep(2000)
                    end
                    error()
                end
            end
            sendPacket("action|join_request\nname|"..name.."\ninvitedWorld|0",3)
            sleep(warp)
        end
        removeHooks()
        sleep(2000)
    end
    if getBot().world == string.upper(world) then
        if door ~= "" then
            local stuck = 0
            while getTile(math.floor(getBot().x / 32),math.floor(getBot().y / 32)).fg == 6 and not wrong do
                while getBot().status ~= "online" do
                    connect()
                    sleep(reconnect)
                    if getBot().status == "suspended" or getBot().status == "banned" or getBot().status == "maintenance" then
                        if removingbot then
                            removeBot(getBot().name)
                            sleep(2000)
                        end
                        error()
                    end
                end
                sendPacket("action|join_request\nname|"..name.."\ninvitedWorld|0",3)
                sleep(warp)
                stuck = stuck + 1
                if stuck == 5 then
                    wrong = true
                end
            end
        end
    end
end

identity.itemFloat = function(id)
	local count = 0
	for _, obj in pairs(getObjects()) do
		if obj.id == id then
			count = count + obj.count
		end
	end
	return count
end

identity.goodtimes = function(estimates)
    local seconds = tonumber(estimates)
    if seconds <= 0 then
        return "00:00:00";
    else
        hours = string.format("%02.f", math.floor(estimates/3600));
        minutes = string.format("%02.f", math.floor(estimates/60 - (hours*60)));
        seconds = string.format("%02.f", math.floor(estimates - hours*3600 - minutes *60));
        return ""..hours.." : "..minutes.." : "..seconds
    end
end

identity.take = function(threads)
    for i = identity.takeseed , #storage do
        ::BACK::
        setJob("Take seed")
        world = storage[i]
        identity.warp(world,doorstorage)
        identity.webhookinfo()
        if not people then
            if not level then
                if not subserver then
                    if not nuked then
                        if not wrong then
                            if not looping then
                                if identity.itemFloat(seed) == 0 then
                                    infoid[world] = ""..identity.itemFloat(seed).." EMPTY !!"
                                    identity.botinfo("Seeds storage : [ ||"..world.."|| ] has empty, skipped world @everyone")
                                    print("Seeds storage : [ "..world.." ] has empty, skipped world")
                                    identity.takeseed = identity.takeseed + 1
                                    if identity.takeseed > #storage then
                                        infoid[world] = ""..identity.itemFloat(seed).." EMPTY !!"
                                        identity.botinfo("All seeds storage has empty, Removing bot : [ ||"..getBot().name.."|| ] @everyone")
                                        print("All seeds storage has empty, Removing bot : [ "..getBot().name.." ]")
                                        if removingbot then
                                            removeBot(getBot().name)
                                            sleep(2000)
                                        end
                                        error()
                                    end
                                else
                                    for _, object in pairs(getObjects()) do
                                        if object.id == seed then
                                            findPath(math.floor((object.x)/32), math.floor((object.y)/32))
                                            sleep(1000)
                                            collect(2)
                                            sleep(1000)
                                            identity.reconnect(world,doorstorage,math.floor((object.x)/32), math.floor((object.y)/32))
                                        end
                                        if findItem(seed) > 0 then
                                            break
                                        end
                                    end
                                    if splice then
                                        for _, object in pairs(getObjects()) do
                                            if object.id == seedsplice then
                                                findPath(math.floor((object.x)/32), math.floor((object.y)/32))
                                                sleep(1000)
                                                collect(2)
                                                sleep(1000)
                                                identity.reconnect(world,doorstorage,math.floor((object.x)/32), math.floor((object.y)/32))
                                            end
                                            if findItem(seedsplice) > 0 then
                                                break
                                            end
                                        end
                                    end
                                    sleep(100)
                                    break
                                end
                            else
                                for _, object in pairs(getObjects()) do
                                    if object.id == seed then
                                        findPath(math.floor((object.x)/32), math.floor((object.y)/32))
                                        sleep(1000)
                                        collect(2)
                                        sleep(1000)
                                        identity.reconnect(world,doorstorage,math.floor((object.x)/32), math.floor((object.y)/32))
                                    end
                                    if findItem(seed) > 0 then
                                        break
                                    end
                                end
                                if splice then
                                    for _, object in pairs(getObjects()) do
                                        if object.id == seedsplice then
                                            findPath(math.floor((object.x)/32), math.floor((object.y)/32))
                                            sleep(1000)
                                            collect(2)
                                            sleep(1000)
                                            identity.reconnect(world,doorstorage,math.floor((object.x)/32), math.floor((object.y)/32))
                                        end
                                        if findItem(seedsplice) > 0 then
                                            break
                                        end
                                    end
                                end
                                sleep(100)
                                break
                            end
                        else
                            infoid[world] = "WRONG DOOR ID"
                            wrong = false
                            sleep(5000)
                            identity.botinfo("Seeds storage : [ ||"..world.."|| ] is wrong door id, skipped world @everyone")
                            print("Seeds storage : [ "..world.." ] is wrong door id, skipped world")
                            identity.takeseed = identity.takeseed + 1
                            if identity.takeseed > #storage then
                                identity.botinfo("All seeds storage has empty, Removing bot : [ ||"..getBot().name.."|| ] @everyone")
                                print("All seeds storage has empty, Removing bot : [ "..getBot().name.." ]")
                                if removingbot then
                                    removeBot(getBot().name)
                                    sleep(2000)
                                end
                                error()
                            end
                        end
                    else
                        infoid[world] = "NUKED"
                        nuked = false
                        sleep(5000)
                        identity.botinfo("Seeds storage : [ ||"..world.."|| ] is NUKED, skipped world @everyone")
                        print("Seeds storage : [ "..world.." ] is NUKED, skipped world")
                        identity.takeseed = identity.takeseed + 1
                        if identity.takeseed > #storage then
                            identity.botinfo("All seeds storage has empty, Removing bot : [ ||"..getBot().name.."|| ] @everyone")
                            print("All seeds storage has empty, Removing bot : [ "..getBot().name.." ]")
                            if removingbot then
                                removeBot(getBot().name)
                                sleep(2000)
                            end
                            error()
                        end
                    end
                else
                    subserver = false
                    sleep(5000)
                    print("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
                    identity.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
                    sleep(120000)
                    goto BACK
                end
            else
                level = false
                sleep(5000)
                print("World : "..world.." has level limit, change ur level world limit")
                identity.botinfo("World : "..world.." has level limit, change ur level world limit !, terminated script @everyone")
                error()
            end
        else
            people = false
            sleep(5000)
            print("World : "..world.." has full people, sleeping for 2 minutes")
            identity.botinfo("World : "..world.." has full people, sleeping for 2 minutes")
            sleep(120000)
            goto BACK
        end
    end
    infoid[world] = ""..identity.itemFloat(seed)..""
end

identity.recheck = function(threads)
    for _, tile in pairs(getTiles()) do
        for i = 1,2 do
            if tile.fg == 0 and getTile(tile.x, tile.y + 1).flags ~= 0 then
                if splice then
                    if findItem(seed) == 0 or findItem(seedsplice) == 0 then
                        ::BACK::
                        identity.take(threads)
                        if looping then
                            if findItem(seed) == 0 or findItem(seedsplice) == 0 then
                                goto BACK
                            end
                        end
                        setJob("Planting")
                        identity.warp(threads,doorfarmList)
                        identity.webhookinfo()
                    end
                else
                    if findItem(seed) == 0 then
                        ::BACK::
                        identity.take(threads)
                        if looping then
                            if findItem(seed) == 0 then
                                goto BACK
                            end
                        end
                        setJob("Planting")
                        identity.warp(threads,doorfarmList)
                        identity.webhookinfo()
                    end
                end
                findPath(tile.x,tile.y)
                sleep(25)
                identity.reconnect(threads,doorfarmList,tile.x,tile.y)
                if splice then
                    while getTile(tile.x,tile.y).fg ~= seed do
                        place(seed,0,0)
                        sleep(plant)
                        identity.reconnect(threads,doorfarmList,tile.x,tile.y)
                    end
                    while getTile(tile.x,tile.y).fg == seed do
                        place(seedsplice,0,0)
                        sleep(plant)
                        identity.reconnect(threads,doorfarmList,tile.x,tile.y)
                    end
                else
                    if getTile(tile.x,tile.y).fg ~= seed then
                        place(seed,0,0)
                        sleep(plant)
                        identity.reconnect(threads,doorfarmList,tile.x,tile.y)
                    end
                end
            end
        end
    end
end

identity.plant = function(threads)
    tileA = 99
    tileB = 0
    tileC = -1
    tileD = 0
    for y = -1, 53 do
        for x = tileA, tileB, tileC do
            if getTile(x, y).fg == 0 and getTile(x, y + 1).flags ~= 0 then
                if splice then
                    if findItem(seed) == 0 or findItem(seedsplice) == 0 then
                        ::BACK::
                        identity.take(threads)
                        if looping then
                            if findItem(seed) == 0 or findItem(seedsplice) == 0 then
                                goto BACK
                            end
                        end
                        setJob("Planting")
                        identity.warp(threads,doorfarmList)
                        identity.webhookinfo()
                    end
                else
                    if findItem(seed) == 0 then
                        ::BACK::
                        identity.take(threads)
                        if looping then
                            if findItem(seed) == 0 then
                                goto BACK
                            end
                        end
                        setJob("Planting")
                        identity.warp(threads,doorfarmList)
                        identity.webhookinfo()
                    end
                end
                findPath(x,y)
                sleep(25)
                identity.reconnect(threads,doorfarmList,x,y)
                if splice then
                    while getTile(x,y).fg ~= seed do
                        place(seed,0,0)
                        sleep(plant)
                        identity.reconnect(threads,doorfarmList,x,y)
                    end
                    while getTile(x,y).fg == seed do
                        place(seed,0,0)
                        sleep(plant)
                        identity.reconnect(threads,doorfarmList,x,y)
                    end
                else
                    if getTile(x,y).fg ~= seed then
                        place(seed,0,0)
                        sleep(plant)
                        identity.reconnect(threads,doorfarmList,x,y)
                    end
                end
            end
        end
        if tileD == 1 then
            if tileA == 0 then
                tileA = 99
                tileB = 0
                tileC = -1
                tileD = 0
            elseif tileA == 99 then
                tileA = 0
                tileB = 99
                tileC = 1
                tileD = 0
            end
        elseif tileD == 0 then
            tileD = tileD + 1
        end
    end
end

identity.dropnpg = function()
    ::BACK::
    world = identity.splitt(worldnpg[index],"[^:]+")[1]
    door = identity.splitt(worldnpg[index],"[^:]+")[2]
	setJob("Dropping NPG")
    identity.warp(world,door)
    if not people then
        if not level then
            if not subserver then
                if not nuked then
                    if not wrong then
                        while findItem(6086) > 0 do
                            drop(6086)
                            sleep(2000)
                            move(-1,0)
                            sleep(250)
                        end
                    else
                        wrong = false
                        sleep(5000)
                        print("Id door world npg is wrong, check ur id door !!")
                        identity.botinfo("Id door world npg is wrong, check ur id door !! @everyone")
                        error()
                    end
                else
                    nuked = false
                    sleep(5000)
                    print("World npg is nuked, check ur world !!")
                    identity.botinfo("World npg is nuked, check ur world !! @everyone")
                    error()
                end
            else
                subserver = false
                sleep(5000)
                print("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
                identity.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
                sleep(120000)
                goto BACK
            end
        else
            level = false
            sleep(5000)
            print("World : "..world.." has level limit, change ur level world limit")
            identity.botinfo("World : "..world.." has level limit, change ur level world limit !, terminated script @everyone")
            error()
        end
    else
        people = false
        sleep(5000)
        print("World : "..world.." has full people, sleeping for 2 minutes")
        identity.botinfo("World : "..world.." has full people, sleeping for 2 minutes")
        sleep(120000)
        goto BACK
    end
end

identity.npg = function()
    ::BACK::
    world = identity.splitt(worldnpg[index],"[^:]+")[1]
    door = identity.splitt(worldnpg[index],"[^:]+")[2]
    setJob("Taking NPG")
    identity.warp(world,door)
    if not people then
        if not level then
            if not subserver then
                if not nuked then
                    if not wrong then
                        for _, obj in pairs(getObjects()) do
                            if obj.id == 6086 then
                                findPath(math.floor(obj.x / 32),math.floor(obj.y / 32))
                                sleep(1000)
                                collect(2)
                                sleep(1000)
                                identity.reconnect(world,door,math.floor(obj.x / 32),math.floor(obj.y / 32))
                            end
                            if findItem(6086) > 0  then
                                break
                            end
                        end
                        wear(6086)
                        sleep(1000)
                        move(-1,0)
                        sleep(1000)
                        if findItem(6086) > 1 then
                            drop(6086,findItem(6086) - 1)
                            sleep(2000)
                        end
                    else
                        wrong = false
                        sleep(5000)
                        print("Id door world npg is wrong, check ur id door !!")
                        identity.botinfo("Id door world npg is wrong, check ur id door !! @everyone")
                        error()
                    end
                else
                    nuked  = false
                    sleep(5000)
                    print("World npg is nuked, check ur world !!")
                    identity.botinfo("World npg is nuked, check ur world !! @everyone")
                    error()
                end
            else
                subserver = false
                sleep(5000)
                print("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
                identity.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
                sleep(120000)
                goto BACK
            end
        else
            level = false
            sleep(5000)
            print("World : "..world.." has level limit, change ur level world limit")
            identity.botinfo("World : "..world.." has level limit, change ur level world limit !, terminated script @everyone")
            error()
        end
    else
        people = false
        sleep(5000)
        print("World : "..world.." has full people, sleeping for 2 minutes")
        identity.botinfo("World : "..world.." has full people, sleeping for 2 minutes")
        sleep(120000)
        goto BACK
    end
end

identity.killing = function()
    for _, worlds in pairs(farmList) do
        ::BACK::
        setJob("Killing ghost")
        identity.warp(worlds,"")
        identity.reconnect(worlds,"")
        if not people then
            if not level then
                if not subserver then
                    if not nuked then
                        if not wrong then
                            sleep(kill)
                        else
                            wrong = false
                            sleep(5000)
                            print(""..worlds.." is wrong door id, skipped world")
                            identity.botinfo("[ ||"..worlds.."|| ] is wrong door id, skipped world @everyone")
                        end
                    else
                        nuked = false
                        sleep(5000)
                        print(""..worlds.." is NUKED!, check ur world !!")
                        identity.botinfo("[ ||"..worlds.."|| ] is NUKED!, check ur world !! @everyone")
                    end
                else
                    subserver = false
                    sleep(5000)
                    print("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
                    identity.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
                    sleep(120000)
                    goto BACK
                end
            else
                level = false
                sleep(5000)
                print("World : "..worlds.." has level limit, change ur level world limit")
                identity.botinfo("World : "..worlds.." has level limit, change ur level world limit !, terminated script @everyone")
                error()
            end
        else
            people = false
            sleep(5000)
            print("World : "..worlds.." has full people, sleeping for 2 minutes")
            identity.botinfo("World : "..worlds.." has full people, sleeping for 5 minutes")
            sleep(120000)
            goto BACK
        end
    end
end

identity.writeFile = function(threads)
    local file = io.open("WorldStatus.txt","a")
    file:write(threads.."\n")
    file:close()
end

if BizzantiuM.version == "1.2" and BizzantiuM.handler == "akbarsht" then
    if killghost then
        if findItem(6086) == 0 then
            identity.npg()
            identity.killing()
            identity.dropnpg()
        else
            identity.killing()
            identity.dropnpg()
        end
        print("All ghost are killed, please disable auto kill ghost then re-execute script")
        identity.botinfo("All ghost are killed, please disable auto kill ghost then re-execute script @everyone")
        error()
    end
	for idx , value in ipairs(worlds) do
        ::BACK::
		setJob("Planting")
		identity.warp(value,doorfarmList)
        identity.webhookinfo()
        if not people then
            if not level then
                if not subserver then
                    if not nuked then
                        if not wrong then
                            identity.plant(value)
                            identity.recheck(value)
                        else
                            identity.writeFile("[ "..value.." ] is wrong id")
                            sleep(1000)
                            wrong = false
                            sleep(5000)
                            print("[ "..value.." ] is wrong door id, skipped world")
                            identity.botinfo("[ ||"..value.."|| ] is wrong door id, skipped world !! @everyone")
                        end
                    else
                        identity.writeFile("[ "..value.." ] is NUKED !!")
                        sleep(1000)
                        nuked = false
                        sleep(5000)
                        print(""..value.." is NUKED!, check ur world !!")
                        identity.botinfo("[ ||"..value.."|| ] is NUKED!, check ur world !! @everyone")
                    end
                else
                    subserver = false
                    sleep(5000)
                    print("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
                    identity.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
                    sleep(120000)
                    goto BACK
                end
            else
                level = false
                sleep(5000)
                print("World : "..value.." has level limit, change ur level world limit")
                identity.botinfo("World : "..value.." has level limit, change ur level world limit !, terminated script @everyone")
                error()
            end
        else
            people = false
            sleep(5000)
            print("World : "..value.." has full people, sleeping for 2 minutes")
            identity.botinfo("World : "..value.." has full people, sleeping for 2 minutes")
            sleep(120000)
            goto BACK
        end
    end
    print("Allready finished all world, removing bot!")
    identity.botinfo("[ ||"..getBot().name.."|| ] Allready finished all world, removing bot! @everyone")
    if removingbot then
        removeBot(getBot().name)
        sleep(2000)
    end
    error()
else
    print("This script made by BizzantuM's server, buy at another server = RESELLER !!")
    error()
end
