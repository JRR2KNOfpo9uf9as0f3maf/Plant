for i, bot in pairs(getBots()) do
    if getBot().name:upper() == bot.name:upper() then
        indexbot = i
    end
end

webhook = setting.webhook.infostorage.link
message = setting.webhook.infostorage.messageid
index = 1
timer = {}
infoid = {}
worlds = {}
strings = ""
local identity = {}
identity.param = setting.farmList.door
identity.takeseed = 1
identity.goodtime = os.time()

for i =  1,setting.farmList.worldperbot do
    table.insert(worlds,setting.farmList.world[math.floor((indexbot - 1) * setting.farmList.worldperbot + i)])
end

identity.splitt = function(str, ptr)
    if not ptr then 
        ptr = "%s"
    end
    local tbl = {}
    for string in string.gmatch(str, ptr) do
        table.insert(tbl, string) 
    end
    return tbl
end

identity.botinfo = function(content)
	if setting.webhook.access then
		text = [[
			$webHookUrl = "]]..setting.webhook.status..[["
			$payload = @{
				content = "]]..content..[["
			}
			[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
			Invoke-RestMethod -Uri $webHookUrl -Body ($payload | ConvertTo-Json -Depth 4) -Method Post -ContentType "application/json"
		]]
		local file = io.popen("powershell -command -", "w")
		file:write(text)
		file:close()
	end
end

identity.botstatus = function()
    strings = ""
    for _, bot in pairs(getBots()) do
        if setting.webhook.short then
            strings = strings.."\n"..""..(string.sub(bot.name,1,3)).." | ||"..(string.sub(bot.world,1,3)).."|| | "..(string.upper(bot.status)).."" 
        else
            strings = strings.."\n"..""..(string.upper(bot.name)).." | ||"..(string.upper(bot.world)).."|| | "..(string.upper(bot.status)).."" 
        end
    end
    return strings
end

identity.storagename = function()
    strings = ""
	for i = 1, #setting.storage.world do
        if setting.webhook.short then
    		strings = strings.."\n||"..(string.sub(setting.storage.world[i],1,3)).."|| "..(infoid[setting.storage.world[i]] or "?")..""
        else
    		strings = strings.."\n||"..(string.upper(setting.storage.world[i])).."|| "..(infoid[setting.storage.world[i]] or "?")..""
        end
    end
    return strings
end

identity.webhookinfo = function()
	if setting.webhook.infostorage.access then
        local text = [[
            $webHookUrl = "]]..webhook..[[/messages/]]..message..[["
            $payload = @{
                username = "BizzantiuM's"
                embeds = @(
                    @{
                        title = "AUTO PLANT v1.1"
                        color = "]]..math.random(111111,999999)..[["
                        fields = @(
                            @{
                                name = ""
                                value = "]].."RUNNING : [ "..identity.goodtimes(os.difftime(os.time(),identity.goodtime)).." ]"..[["
                                inline = "false"
                            }
                            @{
                                name = "BOT INFO"
                                value = "]]..identity.botstatus()..[["
                                inline = "true"
                            }
                            @{
                                name = "STORAGE STATIC"
                                value = "]]..identity.storagename()..[["
                                inline = "true"
                            }
                        )
                        footer = @{
                            text = "[Hydrotrium] Developed by BizzantiuM's`nLast updated : ]]..(os.date"%d/%m/%y":upper().." at ")..os.date("%I")..":"..os.date("%M").." "..os.date("%p"):upper()..[["
                        }
                    }
                )
            }
            [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
            Invoke-RestMethod -Uri $webHookUrl -Body ($payload | ConvertTo-Json -Depth 4) -Method Patch -ContentType 'application/json'
        ]]
        local pipe = io.popen("powershell -command -", "w")
        pipe:write(text)
        pipe:close()
    end
end

identity.reconnect = function(world,id,x,y)
    if getBot().world ~= world:upper() and getBot().status == "online" then 
        identity.botinfo("[ ||"..getBot().name.."|| ] at another world ??, trying to joining world again @everyone")
        sleep(250)
        print("[ "..getBot().name.." ] at another world ??, trying to joining world again")
        sleep(250)
        local count = 0
        while getBot().world ~= world:upper() do
            sendPacket("action|join_request\nname|"..world:upper().."\ninvitedWorld|0",3)
            sleep(setting.delay.warp)
            if getBot().world ~= world:upper() then 
                count = count + 1
                if count > 5 then
                    identity.botinfo("[ ||"..getBot().name.."|| ] Failed to joining world again, terminated script @everyone")
                    sleep(250)
                    error()
                end
            end
        end
        if id ~= "" then
            local stucks = 0
            while getTile(math.floor(getBot().x / 32),math.floor(getBot().y / 32)).fg == 6 do
                sendPacket("action|join_request\nname|" ..world:upper().."|"..id:upper().."\ninvitedWorld|0", 3)
                sleep(setting.delay.warp)
                if stucks > 3 then
                    identity.botinfo("[ ||"..getBot().name.."|| ] Failed to reconnecting bot, stuck at white door. Terminated script @everyone")
                    sleep(250)
                    error()
                end
            end
        end
        if x and y then
            while math.floor(getBot().x / 32) ~= x or math.floor(getBot().y / 32) ~= y do
                findPath(x,y)
                sleep(150)
            end
        end
        identity.botinfo("[ ||"..getBot().name.."|| ] success to joining world @everyone")
        sleep(250)
        print("[ "..getBot().name.." ] success to joining world")
        sleep(250)
    end
    if getBot().status ~= "online" then
        identity.botinfo("[ ||"..getBot().name.."|| ] status is "..getBot().status.." @everyone")
        sleep(250)
        print("[ "..getBot().name.." ] status is "..getBot().status.."")
        sleep(250)
        while getBot().status ~= "online" do
            connect()
            sleep(setting.delay.reconnect)
            if getBot().status == "suspended" or getBot().status == "banned" or getBot().status == "maintenance" then
                identity.botinfo("[ ||"..getBot().name.."|| ] status is "..getBot().status..", removing bot @everyone")
                sleep(250)
                print("[ "..getBot().name.." ] status is "..getBot().status..", removing bot")
                sleep(250)
                if setting.mode.removeBot then
                    removeBot(getBot().name)
                    sleep(2000)
                end
                error()
            end
        end
        local counts = 0
        while getBot().world ~= world:upper() do
            sendPacket("action|join_request\nname|"..world:upper().."\ninvitedWorld|0",3)
            sleep(setting.delay.warp)
            if getBot().world ~= world:upper() then 
                counts = counts + 1
                if counts > 5 then
                    identity.botinfo("[ ||"..getBot().name.."|| ] Failed to joining world again, terminated script @everyone")
                    sleep(250)
                    error()
                end
            end
        end
        if id ~= "" then
            local stuckk = 0
            while getTile(math.floor(getBot().x / 32),math.floor(getBot().y / 32)).fg == 6 do
                sendPacket("action|join_request\nname|" ..world:upper().."|"..id:upper().."\ninvitedWorld|0", 3)
                sleep(setting.delay.warp)
                if stuckk > 3 then
                    identity.botinfo("[ ||"..getBot().name.."|| ] Failed to reconnecting bot, stuck at white door. Terminated script @everyone")
                    sleep(250)
                    error()
                end
            end
        end
        if x and y then
            while math.floor(getBot().x / 32) ~= x or math.floor(getBot().y / 32) ~= y do
                findPath(x,y)
                sleep(150)
            end
        end
        identity.botinfo("[ ||"..getBot().name.."|| ] status is "..getBot().status.." @everyone")
        sleep(250)
        print("[ "..getBot().name.." ] status is "..getBot().status.."")
        sleep(250)
    end
    if getTile(math.floor(getBot().x / 32),math.floor(getBot().y / 32)).fg == 6 then
        identity.botinfo("[ ||"..getBot().name.."|| ] Stuck at white door ! @everyone")
        sleep(250)
        local stuck = 0
        if id ~= "" then
            while getTile(math.floor(getBot().x / 32),math.floor(getBot().y / 32)).fg == 6 do
                sendPacket("action|join_request\nname|" ..world:upper().."|"..id:upper().."\ninvitedWorld|0", 3)
                sleep(setting.delay.warp)
                if stuck > 3 then
                    identity.botinfo("[ ||"..getBot().name.."|| ] Failed to reconnecting bot, stuck at white door. Terminated script @everyone")
                    sleep(250)
                end
            end
        end
        if x and y then
            while math.floor(getBot().x / 32) ~= x or math.floor(getBot().y / 32) ~= y do
                findPath(x,y)
                sleep(150)
            end
        end
        identity.botinfo("[ ||"..getBot().name.."|| ] Already back to pos ! @everyone")
        sleep(250)
    end
end

identity.warp = function(world,door)
    name = world
    if door ~= "" then
        name = name .. "|" ..door
    end
    if getBot().world ~= string.upper(world) then
        addHook("onvariant","nuked",function (varlist)
            if varlist[0] == "OnConsoleMessage" then
                if string.find(varlist[1],"inaccessible.") then
                    nuked = true
                end
                if string.find(varlist[1], "experiencing high load,") then
                    subserver = true
                end
                if string.find(varlist[1], "people in it.") then
                    people = true
                end
                if string.find(varlist[1], "Players lower than level") then
                    level = true
                end
            end
        end)
        local join = 0
        while getBot().world ~= string.upper(world) and not nuked and not subserver and not people and not level do
            sendPacket("action|join_request\nname|"..name.."\ninvitedWorld|0",3)
            sleep(setting.delay.warp)
            join = join + 1
            if join == 5 then
                server = true
            end
        end
        removeHooks()
        sleep(2000)
    end
    if getBot().world == string.upper(world) then
        if door ~= "" then
            local stuck = 0
            while getTile(math.floor(getBot().x / 32),math.floor(getBot().y / 32)).fg == 6 and not wrong do
                sendPacket("action|join_request\nname|"..name.."\ninvitedWorld|0",3)
                sleep(setting.delay.warp)
                stuck = stuck + 1
                if stuck == 5 then
                    wrong = true
                end
            end
        end
    end
end

identity.itemFloat = function(id)
	local count = 0
	for _, obj in pairs(getObjects()) do
		if obj.id == id then
			count = count + obj.count
		end
	end
	return count
end

identity.goodtimes = function(estimates)
    local seconds = tonumber(estimates)
    if seconds <= 0 then
        return "00:00:00";
    else
        hours = string.format("%02.f", math.floor(estimates/3600));
        minutes = string.format("%02.f", math.floor(estimates/60 - (hours*60)));
        seconds = string.format("%02.f", math.floor(estimates - hours*3600 - minutes *60));
        return ""..hours.." : "..minutes.." : "..seconds
    end
end

identity.take = function(threads)
    for i = identity.takeseed , #setting.storage.world do
        ::BACK::
        setJob("Take seed")
        sleep(250)
		world = setting.storage.world[i]
        identity.door = setting.storage.id
        identity.warp(world,identity.door)
        sleep(250)
        identity.webhookinfo()
        sleep(250)
        if not server then
            if not people then
                if not level then
                    if not subserver then
                        if not nuked then
                            if not wrong then
                                if identity.itemFloat(setting.seed) == 0 then
                                    infoid[world] = ""..identity.itemFloat(setting.seed).." EMPTY !!"
                                    identity.botinfo("Seeds storage : [ ||"..world.."|| ] has empty, skipped world @everyone")
                                    sleep(250)
                                    print("Seeds storage : [ "..world.." ] has empty, skipped world")
                                    sleep(250)
                                    identity.takeseed = identity.takeseed + 1
                                    if identity.takeseed > #setting.storage.world then
                                        infoid[world] = ""..identity.itemFloat(setting.seed).." EMPTY !!"
                                        identity.botinfo("All seeds storage has empty, Removing bot : [ ||"..getBot().name.."|| ] @everyone")
                                        sleep(250)
                                        print("All seeds storage has empty, Removing bot : [ "..getBot().name.." ]")
                                        sleep(250)
                                        if setting.removeBot then
                                            removeBot(getBot().name)
                                            sleep(2000)
                                        end
                                        error()
                                    end
                                else
                                    for _, object in pairs(getObjects()) do
                                        if object.id == setting.seed then
                                            findPath(math.floor((object.x)/32), math.floor((object.y)/32))
                                            sleep(1000)
                                            collect(2)
                                            sleep(1000)
                                            identity.reconnect(world,identity.door,math.floor((object.x)/32), math.floor((object.y)/32))
                                        end
                                        if findItem(setting.seed) > 0 then
                                            break
                                        end
                                    end
                                    if setting.mode.splice then
                                        for _, object in pairs(getObjects()) do
                                            if object.id == setting.mode.seed then
                                                findPath(math.floor((object.x)/32), math.floor((object.y)/32))
                                                sleep(1000)
                                                collect(2)
                                                sleep(1000)
                                                identity.reconnect(world,identity.door,math.floor((object.x)/32), math.floor((object.y)/32))
                                            end
                                            if findItem(setting.mode.seed) > 0 then
                                                break
                                            end
                                        end
                                    end
                                    sleep(100)
                                    break
                                end
                            else
                                infoid[world] = "WRONG DOOR ID"
                                wrong = false
                                sleep(5000)
                                identity.botinfo("Seeds storage : [ ||"..world.."|| ] is wrong door id, skipped world @everyone")
                                sleep(250)
                                print("Seeds storage : [ "..world.." ] is wrong door id, skipped world")
                                sleep(250)
                                identity.takeseed = identity.takeseed + 1
                                if identity.takeseed > #setting.storage.world then
                                    identity.botinfo("All seeds storage has empty, Removing bot : [ ||"..getBot().name.."|| ] @everyone")
                                    sleep(250)
                                    print("All seeds storage has empty, Removing bot : [ "..getBot().name.." ]")
                                    sleep(250)
                                    if setting.removeBot then
                                        removeBot(getBot().name)
                                        sleep(2000)
                                    end
                                    error()
                                end
                            end
                        else
                            infoid[world] = "NUKED"
                            nuked = false
                            sleep(5000)
                            identity.botinfo("Seeds storage : [ ||"..world.."|| ] is NUKED, skipped world @everyone")
                            sleep(250)
                            print("Seeds storage : [ "..world.." ] is NUKED, skipped world")
                            sleep(250)
                            identity.takeseed = identity.takeseed + 1
                            if identity.takeseed > #setting.storage.world then
                                identity.botinfo("All seeds storage has empty, Removing bot : [ ||"..getBot().name.."|| ] @everyone")
                                sleep(250)
                                print("All seeds storage has empty, Removing bot : [ "..getBot().name.." ]")
                                sleep(250)
                                if setting.removeBot then
                                    removeBot(getBot().name)
                                    sleep(2000)
                                end
                                error()
                            end
                        end
                    else
                        subserver = false
                        sleep(5000)
                        print("Bot : "..getBot().name.." system is sub-server, sleeping for 5 minutes")
                        sleep(250)
                        identity.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 5 minutes @everyone")
                        sleep(300000)
                        goto BACK
                    end
                else
                    level = false
                    sleep(5000)
                    print("World : "..world.." has level limit, change ur level world limit")
                    sleep(250)
                    identity.botinfo("World : "..world.." has level limit, change ur level world limit !, terminated script @everyone")
                    sleep(250)
                    error()
                end
            else
                people = false
                sleep(5000)
                print("World : "..world.." has full people, sleeping for 5 minutes")
                sleep(250)
                identity.botinfo("World : "..world.." has full people, sleeping for 5 minutes")
                sleep(300000)
                goto BACK
            end
        else
            server = false
            sleep(5000)
            print("Bot : "..getBot().name.." idiot server, sleeping for 5 minutes")
            sleep(250)
            identity.botinfo("Bot : "..getBot().name.." idiot server, sleeping for 5 minutes@everyone")
            sleep(300000)
            goto BACK
        end
    end
	infoid[world] = ""..identity.itemFloat(setting.seed)..""
end

identity.recheck = function(threads)
    ::BACK::
    setJob("Rechecking")
    sleep(250)
    identity.door = identity.param
    identity.warp(threads,identity.door)
    sleep(250)
    identity.webhookinfo()
    sleep(250)
    if not server then
        if not people then
            if not level then
                if not subserver then
                    if not nuked then
                        if not wrong then
                            for _, tile in pairs(getTiles()) do
                                for i = 1,2 do
                                    if tile.fg == 0 and getTile(tile.x, tile.y + 1).flags ~= 0 then
                                        if setting.mode.splice then
                                            if findItem(setting.seed) == 0 or findItem(setting.mode.seed) == 0 then
                                                identity.take(threads)
                                                sleep(250)
                                                goto BACK
                                            end
                                        else
                                            if findItem(setting.seed) == 0 then
                                                identity.take(threads)
                                                sleep(250)
                                                goto BACK
                                            end
                                        end
                                        identity.door = identity.param
                                        findPath(tile.x,tile.y)
                                        sleep(setting.delay.plant)
                                        identity.reconnect(threads,identity.door,tile.x,tile.y)
                                        if setting.mode.splice then
                                            while getTile(tile.x,tile.y).fg ~= setting.seed do
                                                place(setting.seed,0,0)
                                                sleep(setting.delay.plant)
                                                identity.reconnect(threads,identity.door,tile.x,tile.y)
                                            end
                                            while getTile(tile.x,tile.y).fg == setting.seed do
                                                place(setting.mode.seed,0,0)
                                                sleep(setting.delay.plant)
                                                identity.reconnect(threads,identity.door,tile.x,tile.y)
                                            end
                                        else
                                            if getTile(tile.x,tile.y).fg ~= setting.seed then
                                                place(setting.seed,0,0)
                                                sleep(setting.delay.plant)
                                                identity.reconnect(threads,identity.door,tile.x,tile.y)
                                            end
                                        end
                                    end
                                end
                            end
                        else
                            wrong = false
                            sleep(5000)
                            identity.botinfo("World : [ ||"..threads.."|| ] is Wrong door, terminated script @everyone")
                            sleep(250)
                            print("World : [ "..threads.." ] is Wrong door, terminated script")
                            sleep(250)
                            error()
                        end
                    else
                        nuked = false
                        sleep(5000)
                        identity.botinfo("World : [ ||"..threads.."|| ] is NUKED @everyone")
                        sleep(250)
                        print("World : [ "..threads.." ] is NUKED, terminated script")
                        sleep(250)
                        error()
                    end
                else
                    subserver = false
                    sleep(5000)
                    print("Bot : "..getBot().name.." system is sub-server, sleeping for 5 minutes")
                    sleep(250)
                    identity.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 5 minutes @everyone")
                    sleep(300000)
                    goto BACK
                end
            else
                level = false
                sleep(5000)
                print("World : "..threads.." has level limit, change ur level world limit")
                sleep(250)
                identity.botinfo("World : "..threads.." has level limit, change ur level world limit !, terminated script @everyone")
                sleep(250)
                error()
            end
        else
            people = false
            sleep(5000)
            print("World : "..threads.." has full people, sleeping for 5 minutes")
            sleep(250)
            identity.botinfo("World : "..threads.." has full people, sleeping for 5 minutes")
            sleep(300000)
            goto BACK
        end
    else
        server = false
        sleep(5000)
        print("Bot : "..getBot().name.." idiot server, sleeping for 5 minutes")
        sleep(250)
        identity.botinfo("Bot : "..getBot().name.." idiot server, sleeping for 5 minutes@everyone")
        sleep(300000)
        goto BACK
    end
end


identity.plant = function(threads)
    ::BACK::
    setJob("Planting")
    sleep(250)
    identity.door = identity.param
    identity.warp(threads,identity.door)
    sleep(250)
    identity.webhookinfo()
    sleep(250)
    if not server then
        if not people then
            if not level then
                if not subserver then
                    if not nuked then
                        if not wrong then
                            tileA = 99
                            tileB = 0
                            tileC = -1
                            tileD = 0
                            for y = -1, 53 do
                                for x = tileA, tileB, tileC do
                                    if getTile(x, y).fg == 0 and getTile(x, y + 1).flags ~= 0 then
                                        if setting.mode.splice then
                                            if findItem(setting.seed) == 0 or findItem(setting.mode.seed) == 0 then
                                                identity.take(threads)
                                                sleep(250)
                                                goto BACK
                                            end
                                        else
                                            if findItem(setting.seed) == 0 then
                                                identity.take(threads)
                                                sleep(250)
                                                goto BACK
                                            end
                                        end
                                        identity.door = identity.param
                                        findPath(x,y)
                                        sleep(setting.delay.plant)
                                        identity.reconnect(threads,identity.door,x,y)
                                        if setting.mode.splice then
                                            while getTile(x,y).fg ~= setting.seed do
                                                place(setting.seed,0,0)
                                                sleep(setting.delay.plant)
                                                identity.reconnect(threads,identity.door,x,y)
                                            end
                                            while getTile(x,y).fg == setting.seed do
                                                place(setting.mode.seed,0,0)
                                                sleep(setting.delay.plant)
                                                identity.reconnect(threads,identity.door,x,y)
                                            end
                                        else
                                            if getTile(x,y).fg ~= setting.seed then
                                                place(setting.seed,0,0)
                                                sleep(setting.delay.plant)
                                                identity.reconnect(threads,identity.param,x,y)
                                            end
                                        end
                                    end
                                end
                                if tileD == 1 then
                                    if tileA == 0 then
                                        tileA = 99
                                        tileB = 0
                                        tileC = -1
                                        tileD = 0
                                    elseif tileA == 99 then
                                        tileA = 0
                                        tileB = 99
                                        tileC = 1
                                        tileD = 0
                                    end
                                elseif tileD == 0 then
                                    tileD = tileD + 1
                                end
                            end
                        else
                            wrong = false
                            sleep(5000)
                            identity.botinfo("World : [ ||"..threads.."|| ] is Wrong door, terminated script @everyone")
                            sleep(250)
                            print("World : [ "..threads.." ] is Wrong door, terminated script")
                            sleep(250)
                            error()
                        end
                    else
                        nuked = false
                        sleep(5000)
                        identity.botinfo("World : [ ||"..threads.."|| ] is NUKED @everyone")
                        sleep(250)
                        print("World : [ "..threads.." ] is NUKED, terminated script")
                        sleep(250)
                        error()
                    end
                else
                    subserver = false
                    sleep(5000)
                    print("Bot : "..getBot().name.." system is sub-server, sleeping for 5 minutes")
                    sleep(250)
                    identity.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 5 minutes @everyone")
                    sleep(300000)
                    goto BACK
                end
            else
                level = false
                sleep(5000)
                print("World : "..threads.." has level limit, change ur level world limit")
                sleep(250)
                identity.botinfo("World : "..threads.." has level limit, change ur level world limit !, terminated script @everyone")
                sleep(250)
                error()
            end
        else
            people = false
            sleep(5000)
            print("World : "..threads.." has full people, sleeping for 5 minutes")
            sleep(250)
            identity.botinfo("World : "..threads.." has full people, sleeping for 5 minutes")
            sleep(300000)
            goto BACK
        end
    else
        server = false
        sleep(5000)
        print("Bot : "..getBot().name.." idiot server, sleeping for 5 minutes")
        sleep(250)
        identity.botinfo("Bot : "..getBot().name.." idiot server, sleeping for 5 minutes@everyone")
        sleep(300000)
        goto BACK
    end
end

identity.dropnpg = function()
    ::BACK::
    world = identity.splitt(setting.mode.worldnpg[index],"[^:]+")[1]
    identity.door = identity.splitt(setting.mode.worldnpg[index],"[^:]+")[2]
	setJob("Dropping NPG")
    sleep(250)
    identity.warp(world,identity.door)
    sleep(250)
    if not server then
        if not people then
            if not level then
                if not subserver then
                    if not nuked then
                        if not wrong then
                            while findItem(6086) > 0 do
                                drop(6086)
                                sleep(setting.delay.drop)
                            end
                        else
                            wrong = false
                            sleep(5000)
                            print("Id door world npg is wrong, check ur id door !!")
                            sleep(250)
                            identity.botinfo("Id door world npg is wrong, check ur id door !! @everyone")
                            sleep(250)
                            error()
                        end
                    else
                        nuked = false
                        sleep(5000)
                        print("World npg is nuked, check ur world !!")
                        sleep(250)
                        identity.botinfo("World npg is nuked, check ur world !! @everyone")
                        sleep(250)
                        error()
                    end
                else
                    subserver = false
                    sleep(5000)
                    print("Bot : "..getBot().name.." system is sub-server, sleeping for 5 minutes")
                    sleep(250)
                    identity.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 5 minutes @everyone")
                    sleep(300000)
                    goto BACK
                end
            else
                level = false
                sleep(5000)
                print("World : "..world.." has level limit, change ur level world limit")
                sleep(250)
                identity.botinfo("World : "..world.." has level limit, change ur level world limit !, terminated script @everyone")
                sleep(250)
                error()
            end
        else
            people = false
            sleep(5000)
            print("World : "..world.." has full people, sleeping for 5 minutes")
            sleep(250)
            identity.botinfo("World : "..world.." has full people, sleeping for 5 minutes")
            sleep(300000)
            goto BACK
        end
    else
        server = false
        sleep(5000)
        print("Bot : "..getBot().name.." idiot server, sleeping for 5 minutes")
        sleep(250)
        identity.botinfo("Bot : "..getBot().name.." idiot server, sleeping for 5 minutes@everyone")
        sleep(300000)
        goto BACK
    end
end

identity.npg = function()
    ::BACK::
    world = identity.splitt(setting.mode.worldnpg[index],"[^:]+")[1]
    identity.door = identity.splitt(setting.mode.worldnpg[index],"[^:]+")[2]
    setJob("Taking NPG")
    sleep(250)
    identity.warp(world,identity.door)
    sleep(250)
    if not server then
        if not people then
            if not level then
                if not subserver then
                    if not nuked then
                        if not wrong then
                            while findItem(6086) == 0 do
                                for _, obj in pairs(getObjects()) do
                                    if obj.id == 6086 then
                                        findPath(math.floor(obj.x / 32),math.floor(obj.y / 32))
                                        sleep(1000)
                                        collect(2)
                                        sleep(1000)
                                        identity.reconnect(world,identity.door,math.floor(obj.x / 32),math.floor(obj.y / 32))
                                    end
                                    if findItem(6086) > 0  then
                                        break
                                    end
                                end
                            end
                            wear(6086)
                            sleep(500)
                            move(-1,0)
                            sleep(1000)
                            if findItem(6086) > 1 then
                                drop(6086,findItem(6086) - 1)
                                sleep(setting.delay.drop)
                            end
                        else
                            wrong = false
                            sleep(5000)
                            print("Id door world npg is wrong, check ur id door !!")
                            sleep(250)
                            identity.botinfo("Id door world npg is wrong, check ur id door !! @everyone")
                            sleep(250)
                            error()
                        end
                    else
                        nuked  = false
                        sleep(5000)
                        print("World npg is nuked, check ur world !!")
                        sleep(250)
                        identity.botinfo("World npg is nuked, check ur world !! @everyone")
                        sleep(250)
                        error()
                    end
                else
                    subserver = false
                    sleep(5000)
                    print("Bot : "..getBot().name.." system is sub-server, sleeping for 5 minutes")
                    sleep(250)
                    identity.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 5 minutes @everyone")
                    sleep(300000)
                    goto BACK
                end
            else
                level = false
                sleep(5000)
                print("World : "..world.." has level limit, change ur level world limit")
                sleep(250)
                identity.botinfo("World : "..world.." has level limit, change ur level world limit !, terminated script @everyone")
                sleep(250)
                error()
            end
        else
            people = false
            sleep(5000)
            print("World : "..world.." has full people, sleeping for 5 minutes")
            sleep(250)
            identity.botinfo("World : "..world.." has full people, sleeping for 5 minutes")
            sleep(300000)
            goto BACK
        end
    else
        server = false
        sleep(5000)
        print("Bot : "..getBot().name.." idiot server, sleeping for 5 minutes")
        sleep(250)
        identity.botinfo("Bot : "..getBot().name.." idiot server, sleeping for 5 minutes@everyone")
        sleep(300000)
        goto BACK
    end
end

identity.killing = function()
    for _, worlds in pairs(farmList) do
        ::BACK::
        identity.door = idList
        setJob("Killing ghost")
        sleep(250)
        identity.warp(worlds,identity.door)
        sleep(250)
        identity.reconnect(worlds,identity.door)
        sleep(250)
        if not server then
            if not people then
                if not level then
                    if not subserver then
                        if not nuked then
                            if not wrong then
                                sleep(setting.delay.killghost)
                            else
                                wrong = false
                                sleep(5000)
                                print(""..worlds.." is wrong door id, skipped world")
                                sleep(250)
                                identity.botinfo("[ ||"..worlds.."|| ] is wrong door id, skipped world @everyone")
                                sleep(250)
                            end
                        else
                            nuked = false
                            sleep(5000)
                            print(""..worlds.." is NUKED!, check ur world !!")
                            sleep(250)
                            identity.botinfo("[ ||"..worlds.."|| ] is NUKED!, check ur world !! @everyone")
                            sleep(250)
                        end
                    else
                        subserver = false
                        sleep(5000)
                        print("Bot : "..getBot().name.." system is sub-server, sleeping for 5 minutes")
                        sleep(250)
                        identity.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 5 minutes @everyone")
                        sleep(300000)
                        goto BACK
                    end
                else
                    level = false
                    sleep(5000)
                    print("World : "..worlds.." has level limit, change ur level world limit")
                    sleep(250)
                    identity.botinfo("World : "..worlds.." has level limit, change ur level world limit !, terminated script @everyone")
                    sleep(250)
                    error()
                end
            else
                people = false
                sleep(5000)
                print("World : "..worlds.." has full people, sleeping for 5 minutes")
                sleep(250)
                identity.botinfo("World : "..worlds.." has full people, sleeping for 5 minutes")
                sleep(300000)
                goto BACK
            end
        else
            server = false
            sleep(5000)
            print("Bot : "..getBot().name.." idiot server, sleeping for 5 minutes")
            sleep(250)
            identity.botinfo("Bot : "..getBot().name.." idiot server, sleeping for 5 minutes@everyone")
            sleep(300000)
            goto BACK
        end
    end
end

identity.writeFile = function(threads)
    local file = io.open("WorldStatus.txt","a")
    file:write(threads.."\n")
    file:close()
end

if BizzantiuM.version == "1.1" and BizzantiuM.handler == "akbarsht" then
    sleep(math.random(300,3000))
    if setting.mode.killghost then
        if findItem(6086) == 0 then
            identity.npg()
            sleep(250)
            identity.killing()
            sleep(250)
            identity.dropnpg()
            sleep(250)
        else
            identity.killing()
            sleep(250)
            identity.dropnpg()
            sleep(250)
        end
        print("All ghost are killed, please disable auto kill ghost then re-execute script")
        sleep(250)
        identity.botinfo("All ghost are killed, please disable auto kill ghost then re-execute script @everyone")
        sleep(250)
        error()
    end
	for idx , value in ipairs(worlds) do
        ::BACK::
		identity.door = setting.farmList.door
		setJob("Planting")
        sleep(250)
		identity.warp(value,identity.door)
        sleep(250)
        identity.webhookinfo()
        sleep(250)
        if not server then
            if not people then
                if not level then
                    if not subserver then
                        if not nuked then
                            if not wrong then
                                identity.plant(value)
                                sleep(250)
                                identity.recheck(value)
                                sleep(250)
                            else
                                identity.writeFile("[ "..value.." ] is wrong id")
                                sleep(1000)
                                wrong = false
                                sleep(5000)
                                print("[ "..value.." ] is wrong door id, skipped world")
                                sleep(250)
                                identity.botinfo("[ ||"..value.."|| ] is wrong door id, skipped world !! @everyone")
                                sleep(250)
                            end
                        else
                            identity.writeFile("[ "..value.." ] is NUKED !!")
                            sleep(1000)
                            nuked = false
                            sleep(5000)
                            print(""..value.." is NUKED!, check ur world !!")
                            sleep(250)
                            identity.botinfo("[ ||"..value.."|| ] is NUKED!, check ur world !! @everyone")
                            sleep(250)
                        end
                    else
                        subserver = false
                        sleep(5000)
                        print("Bot : "..getBot().name.." system is sub-server, sleeping for 5 minutes")
                        sleep(250)
                        identity.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 5 minutes @everyone")
                        sleep(300000)
                        goto BACK
                    end
                else
                    level = false
                    sleep(5000)
                    print("World : "..value.." has level limit, change ur level world limit")
                    sleep(250)
                    identity.botinfo("World : "..value.." has level limit, change ur level world limit !, terminated script @everyone")
                    sleep(250)
                    error()
                end
            else
                people = false
                sleep(5000)
                print("World : "..value.." has full people, sleeping for 5 minutes")
                sleep(250)
                identity.botinfo("World : "..value.." has full people, sleeping for 5 minutes")
                sleep(300000)
                goto BACK
            end
        else
            server = false
            sleep(5000)
            print("Bot : "..getBot().name.." idiot server, sleeping for 5 minutes")
            sleep(250)
            identity.botinfo("Bot : "..getBot().name.." idiot server, sleeping for 5 minutes@everyone")
            sleep(300000)
            goto BACK
        end
    end
    print("Allready finished all world, removing bot!")
    sleep(250)
    identity.botinfo("[ ||"..getBot().name.."|| ] Allready finished all world, removing bot! @everyone")
    sleep(250)
    if setting.removeBot then
        removeBot(getBot().name)
        sleep(2000)
    end
    error()
else
    print("This script made by BizzantuM's server, buy at another server = RESELLER !!")
    sleep(250)
end
